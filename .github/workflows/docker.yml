name: Publish Docker images

on:
  schedule:
    # 09:00 every day (UTC)
    - cron: "0 9 * * *"
  pull_request:
    paths:
      - '.github/workflows/**'
      - "images/**"
      - "tests/**"
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'requirements.txt'
      - '**.py'
      - '**.sh'
      - '.dockerignore'
      - '.env.example'
      - "!**/README.md"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/**"
      - "images/**"
      - "tests/**"
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'requirements.txt'
      - '**.py'
      - '**.sh'
      - '.dockerignore'
      - '.env.example'
      - "!**/README.md"
  workflow_dispatch:

env:
  REGISTRY_URL: ${{ vars.REGISTRY_URL }}
  REGISTRY_USER: ${{ vars.REGISTRY_USER }}

jobs:
  push_to_registry:
    name: Push Docker image to container registry
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # continue building even if one image fails
      matrix:
        image:
          - context: images/base-notebook
            dockerfile: images/base-notebook/Dockerfile
            name: jupyter-notebook
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.image.name }}-${{ github.head_ref || github.ref }}
      cancel-in-progress: true
    permissions:
      packages: write
      contents: read
      actions: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set password by container registry
        run: |
          case "${{ env.REGISTRY_URL }}" in
            "ghcr.io")
              echo "REGISTRY_PASS=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
              ;;
            *)
              if [ -n "${{ secrets.REGISTRY_PASS }}" ]; then
                echo "REGISTRY_PASS=${{ secrets.REGISTRY_PASS }}" >> $GITHUB_ENV
              else
                echo "REGISTRY_PASS secret is not set and registry is not recognized. Exiting..."
                exit 1
              fi
              ;;
          esac

      - name: Log into container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASS }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_URL }}/${{ env.REGISTRY_USER }}/${{ matrix.image.name }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch || 'main') }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          cache-from: type=registry,ref=${{ env.REGISTRY_URL }}/${{ env.REGISTRY_USER }}/${{ matrix.image.name }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY_URL }}/${{ env.REGISTRY_USER }}/${{ matrix.image.name }}:buildcache,mode=max
